---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: nginx-ingress
  annotations:
    kubernetes.io/ingress.class: traefik
    # add an annotation indicating the SSL cert issuer to use. This will provision a cert automatically
    cert-manager.io/cluster-issuer: letsencrypt-production
    reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
    reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces: "default"  # Control destination namespaces

spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`www.nginx-$REGION.home.techfitsu.org`)
      kind: Rule
      services:
        - name: nginx
          port: 80
    - match: Host(`nginx-$REGION.home.techfitsu.org`)
      kind: Rule
      services:
        - name: nginx
          port: 80
      middlewares:
        - name: default-headers
  tls:
   secretName: home-production-tls
   domains:
    - main: home.techfitsu.org
      sans:
      - "*.home.techfitsu.org"


---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: whoami-ingress
  annotations:
    kubernetes.io/ingress.class: traefik
    # add an annotation indicating the SSL cert issuer to use.
    cert-manager.io/cluster-issuer: letsencrypt-production
    reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
    reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces: "default"  # Control destination namespaces
spec:
  entryPoints:
    - websecure
  routes:    
    - match: Host(`whoami-$REGION.home.techfitsu.org`)
      kind: Rule
      services:
        - name: whoami
          port: 80
      middlewares:
        - name: default-headers
  tls:
   secretName: home-production-tls
   domains:
    - main: home.techfitsu.org
      sans:
      - "*.home.techfitsu.org"
   