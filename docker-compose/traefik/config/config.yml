http:
 #region routers 
  routers:
    proxmox:
      entryPoints:
        - "websecure"
      rule: "Host(`proxmox.home.techfitsu.org`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {
        certResolver: "production"
      }
      service: proxmox
    pihole2:
      entryPoints:
        - "websecure"
      rule: "Host(`pihole2.home.techfitsu.org`)"
      middlewares:
        - redirectregex-pihole
        - default-headers
        - addprefix-pihole
        - https-redirectscheme
      tls: {
        certResolver: "production"
      }
      service: pihole2
    homebridge:
      entryPoints:
        - "websecure"
      rule: "Host(`homebridge.home.techfitsu.org`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {
        certResolver: "production"
      }
      service: homebridge
    homeassistant:
      # For Homeassistant config, check: https://www.home-assistant.io/integrations/http/#reverse-proxies
      # This relies on Homeassistant using http. No certs are needed in the Homeassistant config.
      entryPoints:
        - "https"
      rule: "Host(`homeassistant.home.techfitsu.org`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {
        certResolver: "production"
      }
      service: homeassistant
    syncthing:
      entryPoints:
        - "https"
      rule: "Host(`syncthing.home.techfitsu.org`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {
        certResolver: "production"
      }
      service: syncthing
    truenas:
      entryPoints:
        - "https"
      rule: "Host(`truenas.home.techfitsu.org`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {
        certResolver: "production"
      }
      service: truenas
    plex:
      entryPoints:
        - "https"
      rule: "Host(`plex.home.techfitsu.org`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {
        certResolver: "production"
      }
      service: plex
    minio:
      entryPoints:
        - "https"
      rule: "Host(`minio.home.techfitsu.org`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {
        certResolver: "production"
      }
      service: minio
    rancher:
      entryPoints:
        - "https"
      rule: "Host(`rancher.home.techfitsu.org`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {
        certResolver: "production"
      }
      service: rancher
    opnsense:
      entryPoints:
        - "https"
      rule: "Host(`opnsense.home.techfitsu.org`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {
        certResolver: "production"
      }
      service: opnsense
    pterodactyl:
      entryPoints:
        - "https"
      rule: "Host(`pterodactyl.home.techfitsu.org`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {
        certResolver: "production"
      }
      service: pterodactyl

#endregion
#region services
  services:
    proxmox:
      loadBalancer:
        servers:
          - url: "https://192.168.0.100:8006"
        passHostHeader: true
    pihole2:
      loadBalancer:
        servers:
          - url: "http://192.168.0.79:80"
        passHostHeader: true
    homebridge:
      loadBalancer:
        servers:
          - url: "http://192.168.0.102:10999"
        passHostHeader: true
    homeassistant:
      loadBalancer:
        servers:
          - url: "http://192.168.0.102:10999"
        passHostHeader: true
    syncthing:
      loadBalancer:
        servers:
          - url: "https://192.168.0.103:8384"
        passHostHeader: true
    truenas:
      loadBalancer:
        servers:
          - url: "https://192.168.0.104"
        passHostHeader: true
    plex:
      loadBalancer:
        servers:
          - url: "https://192.168.0.105:32400"
        passHostHeader: true
    minio:
      loadBalancer:
        servers:
          - url: "https://192.168.0.106:9000/"
        passHostHeader: true
    rancher:
      loadBalancer:
        servers:
          - url: "https://192.168.0.107"
        passHostHeader: true
    opnsense:
      loadBalancer:
        servers:
          - url: "https://192.168.0.109"
        passHostHeader: true
    pterodactyl:
      loadBalancer:
        servers:
          - url: "http://192.168.0.110:80"
        passHostHeader: true
#endregion
  middlewares:
    addprefix-pihole:
      addPrefix:
        prefix: "/admin"
    https-redirectscheme:
      redirectScheme:
        scheme: https
        permanent: true
    redirectregex-pihole:
      redirectRegex:
        regex: /admin/$
        replacement: /

    default-headers:
      headers:
        frameDeny: true
        browserXssFilter: true
        contentTypeNosniff: true
        forceSTSHeader: true
        stsIncludeSubdomains: true
        stsPreload: true
        stsSeconds: 15552000
        customFrameOptionsValue: SAMEORIGIN
        customRequestHeaders:
          X-Forwarded-Proto: https

    default-whitelist:
      ipWhiteList:
        sourceRange:
        - "10.0.0.0/8"
        - "192.168.0.0/16"
        - "172.16.0.0/12"

    secured:
      chain:
        middlewares:
        - default-whitelist
        - default-headers